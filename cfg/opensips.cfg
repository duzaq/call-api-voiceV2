#
# OpenSIPS script for a simple AI Voice Connector
#

loadmodule "rtpengine.so"
loadmodule "kemi.so"
loadmodule "tm.so"
loadmodule "sl.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "xlog.so"

# ----- Global Parameters -----

log_level=3
log_stderror=no
fork=yes
children=4

# ----- RTPengine Module Parameters -----
modparam("rtpengine", "rtpengine_sock", "udp:rtpengine:12122") # Ajuste a porta se necessário

# ----- Routing Logic -----

route {
    # Reduce Max-Forwards
    if (!mf_process_maxfwd_header("10")) {
        sl_send_reply("483", "Too Many Hops");
        exit;
    }

    # Check if the request method is INVITE (a new call)
    if (is_method("INVITE")) {
        # Inform RTPengine of the call and get its offers
        rtpengine_offer();

        # Extract relevant information using text operations, adjust regex as needed
        $var(caller) = $(fU);
        $var(callee) = $(rU);

        xlog("L_INFO", "New call from $var(caller) to $var(callee) - Call-ID: $(callid)\n");

        # Send the necessary data to the Flask app for processing
        $json(data, caller) = $var(caller);
        $json(data, callee) = $var(callee);
        $json(data, call_id) = $(callid);
        $json(data, audio_url) = "http://nginx/audio/silence.mp3"; # URL de silêncio inicial

        # Make an HTTP POST request to the Flask app
        if (!pv_www_post("http://app:5060/sip/call", "$json(data)", , "$var(response)")) {
            xlog("L_ERR", "Failed to send data to Flask app\n");
            sl_send_reply("500", "Internal Server Error");
            exit;
        }

        xlog("L_INFO", "Response from Flask app: $var(response)\n");

        # Check the response from the Flask app and handle accordingly
        if (!is_present_hf("P-AI-Response")) {
            append_hf("P-AI-Response: $var(response)\r\n");
        }

        # Play the response audio
        $var(response_audio_url) = $(json(data=>audio_file){$var(response)});

        if ($var(response_audio_url) != "") {
            xlog("L_INFO", "Playing response audio: $var(response_audio_url)\n");
            rtpengine_answer();
            rtpengine_stream("$var(response_audio_url)");
            rtpengine_delete();

        } else {
            xlog("L_ERR", "No response audio URL found\n");
            rtpengine_delete();
            sl_send_reply("500", "Internal Server Error");
            exit;
        }

    # Handle BYE request (end of call)
    } else if (is_method("BYE")) {
        xlog("L_INFO", "Call ended - Call-ID: $(callid)\n");
        rtpengine_delete();
        t_send_reply("200", "OK");
    }
}
